{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "description": "Describes a sender",
    "title": "Sender resource",
    "additionalProperties": false,
    "required": [
        "receiver_id",
        "master_enable",
        "activation",
        "transport_params"
    ],
    "properties": {
        "receiver_id": {
            "description": "ID of the target Receiver of this Sender. This will be null if the sender is operating in multicast mode, or has not been assigned a receiver in unicast mode, or is sending to a non-NMOS receiver in unicast mode.",
            "type": [
                "string",
                "null"
            ],
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "default": null
        },
        "master_enable": {
            "description": "Master on/off control for sender",
            "type": "boolean",
            "default": true
        },
        "activation": {
            "description": "Parameters concerned with activation of the transport parameters",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "mode",
                "requested_time",
                "activation_time"
            ],
            "properties": {
                "mode": {
                    "description": "Mode of activation: immediate (on message receipt), scheduled_absolute (when internal clock >= requested_time), scheduled_relative (when internal clock >= time of message receipt + requested_time), or null (no activation scheduled). This parameter returns to null once an activation is completed. For immediate activations, in the response to the PATCH request this field will be set to 'activate_immediate', but will be null in response to any subsequent GET requests.",
                    "type": [
                        "string",
                        "null"
                    ],
                    "enum": [
                        "activate_immediate",
                        "activate_scheduled_absolute",
                        "activate_scheduled_relative",
                        null
                    ]
                },
                "requested_time": {
                    "description": "String formatted TAI timestamp (<seconds>:<nanoseconds>) indicating time (absolute or relative) for activation. This field returns to null once the activation is completed. For an immediate activation this field will always be null, even in the response to the PATCH request.",
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "pattern": "^[0-9]+:[0-9]+$"
                },
                "activation_time": {
                    "description": "String formatted TAI timestamp (<seconds>:<nanoseconds>) indicating time (absolute or relative) the receiver will actually activate for scheduled activations, or the time activation occurred for immediate activations. This field returns to null once the activation is completed. For immediate activations, this property will be the time the activation actually occurred in the response to the PATCH request, but null in response to any GET requests thereafter.",
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "pattern": "^[0-9]+:[0-9]+$"
                }
            }
        },
        "transport_params": {
            "description": "Transport-specific parameters",
            "type": "array",
            "items": {
                "type": "object",
                "title": "Sender Output",
                "properties": {
                    "source_ip": {
                        "type": "string",
                        "description": "IP address from which RTP packets will be sent (IP address of interface bound to this output). The sender should provide an enum in the constraints endpoint, which should contain 'auto', and the available interface addresses. If the parameter is set to auto the sender should establish for itself which interface it should use, based on routing rules or its own internal configuration.",
                        "anyOf": [
                            {
                                "format": "ipv4"
                            },
                            {
                                "format": "ipv6"
                            },
                            {
                                "pattern": "^auto$"
                            }
                        ],
                        "default": "auto"
                    },
                    "destination_ip": {
                        "type": "string",
                        "description": "IP address to which RTP packets will be sent. If auto is set the sender should select a multicast address to send to itself. For example it may implement MADCAP (RFC 2730), ZMAAP, or be allocated address by some other system responsible for co-ordination multicast address use.",
                        "anyOf": [
                            {
                                "format": "ipv4"
                            },
                            {
                                "format": "ipv6"
                            },
                            {
                                "pattern": "^auto$"
                            }
                        ]
                    },
                    "source_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "source port for RTP packets (auto = 5004)",
                        "minimum": 0,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "destination_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "destination port for RTP packets (auto = 5004)",
                        "minimum": 1,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "fec_enabled": {
                        "type": "boolean",
                        "description": "FEC on/off",
                        "default": false
                    },
                    "fec_destination_ip": {
                        "type": "string",
                        "description": "May be used if NAT is being used at the destination (auto = destination_ip)",
                        "anyOf": [
                            {
                                "format": "ipv4"
                            },
                            {
                                "format": "ipv6"
                            },
                            {
                                "pattern": "^auto$"
                            }
                        ],
                        "default": "auto"
                    },
                    "fec_type": {
                        "type": "string",
                        "description": "forward error correction mode to apply",
                        "enum": [
                            "XOR",
                            "Reed-Solomon"
                        ],
                        "default": "XOR"
                    },
                    "fec_mode": {
                        "type": "string",
                        "description": "forward error correction mode to apply",
                        "enum": [
                            "1D",
                            "2D"
                        ],
                        "default": "1D"
                    },
                    "fec_block_width": {
                        "type": "integer",
                        "description": "width of block over which FEC is calculated in packets",
                        "minimum": 4,
                        "maximum": 200,
                        "default": 4
                    },
                    "fec_block_height": {
                        "type": "integer",
                        "description": "height of block over which FEC is calculated in packets",
                        "minimum": 4,
                        "maximum": 200,
                        "default": 4
                    },
                    "fec1D_destination_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "destination port for RTP Column FEC packets (auto = RTP destination_port + 2)",
                        "minimum": 1,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "fec2D_destination_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "destination port for RTP Row FEC packets (auto = RTP destination_port + 4)",
                        "minimum": 1,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "fec1D_source_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "source port for RTP FEC packets (auto = RTP source_port + 2)",
                        "minimum": 0,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "fec2D_source_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "source port for RTP FEC packets (auto = RTP source_port + 4)",
                        "minimum": 0,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "rtcp_enabled": {
                        "type": "boolean",
                        "description": "rtcp on/off",
                        "default": false
                    },
                    "rtcp_destination_ip": {
                        "type": "string",
                        "description": "IP address to which RTCP packets will be sent (auto = same as RTP destination_ip)",
                        "anyOf": [
                            {
                                "format": "ipv4"
                            },
                            {
                                "format": "ipv6"
                            },
                            {
                                "pattern": "^auto$"
                            }
                        ],
                        "default": "auto"
                    },
                    "rtcp_destination_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "destination port for RTCP packets (auto = next highest odd port number after RTP destination_port)",
                        "minimum": 1,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "rtcp_source_port": {
                        "type": [
                            "integer",
                            "string"
                        ],
                        "description": "source port for RTCP packets (destination port for RTCP packets (auto = RTP destination_port + 1))",
                        "minimum": 0,
                        "maximum": 65535,
                        "pattern": "^auto$",
                        "default": "auto"
                    },
                    "rtp_enabled": {
                        "type": "boolean",
                        "description": "RTP transmission active/inactive",
                        "default": true
                    }
                }
            }
        }
    }
}
